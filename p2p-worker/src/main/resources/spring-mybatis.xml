<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
">

	<!-- JNDI方式配置数据源 -->
	<!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<property name="jndiName" value="${jndiName}"></property> </bean> -->

<!-- org.springframework.jdbc.datasource.DriverManagerDataSource -->
	<bean id="masterdataSource" class="com.alibaba.druid.pool.DruidDataSource"
	      init-method="init" destroy-method="close">
<!-- 		<property name="driverClassName" value="com.mysql.jdbc.Driver" /> -->
<!-- 		<property name="url" value="jdbc:mysql://127.0.0.1:3306/p2p" /> -->
<!-- 		<property name="username" value="root" /> -->
<!-- 		<property name="password" value="123456" /> -->
		
		<property name="url" value="${master.jdbc.url}" />
		<property name="username" value="${master.jdbc.username}" />
		<property name="password" value="${master.jdbc.password}" />

		<!-- 初始化连接大小 -->
		<property name="initialSize" value="5" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="500" />
		<!-- 连接池最大空闲 -->
<!-- 		<property name="maxIdle" value="20" /> -->
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="5" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="6000" />

		<!-- <property name="poolPreparedStatements" value="true" /> <property 
			name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->

		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="6000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="mergeStat" />
	</bean>
	
	<bean id="slavedataSource" class="com.alibaba.druid.pool.DruidDataSource"
	      init-method="init" destroy-method="close">
<!-- 		<property name="driverClassName" value="com.mysql.jdbc.Driver" /> -->
<!-- 		<property name="url" value="jdbc:mysql://192.168.146.130:3306/p2p" /> -->
<!-- 		<property name="username" value="root" /> -->
<!-- 		<property name="password" value="123456" /> -->

		<property name="url" value="${slave.jdbc.url}" />
		<property name="username" value="${slave.jdbc.username}" />
		<property name="password" value="${slave.jdbc.password}" />

		<!-- 初始化连接大小 -->
		<property name="initialSize" value="5" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="500" />
		<!-- 连接池最大空闲 -->
<!-- 		<property name="maxIdle" value="20" /> -->
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="5" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="6000" />

		<!-- <property name="poolPreparedStatements" value="true" /> <property 
			name="maxPoolPreparedStatementPerConnectionSize" value="33" /> -->

		<property name="validationQuery" value="${validationQuery}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000" />

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true" />
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800" />
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true" />

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="mergeStat" />
	</bean>
	
	<!-- 分页 -->
	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="mapperLocations" value="classpath:com/fion/p2p/dao/**/*_SqlMap.xml" />
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.fion.p2p.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 注解方式配置事物 -->
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

	<!-- 拦截器方式配置事物 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="append*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="repair" propagation="REQUIRED" />
			<tx:method name="delAndRepair" propagation="REQUIRED" />
			<tx:method name="newProd" propagation="REQUIRED" />
			<tx:method name="addMember" propagation="REQUIRED" />
			<tx:method name="newProdAddMember" propagation="REQUIRED" />
			<tx:method name="cancelProd" propagation="REQUIRED" />
			<tx:method name="modifyMemberAccNum" propagation="REQUIRED" />
			<tx:method name="modifyMemberAttribute" propagation="REQUIRED" />
			<tx:method name="modifyMemberState" propagation="REQUIRED" />
			<tx:method name="modifyProdAttribute" propagation="REQUIRED" />
			<tx:method name="modifyProdState" propagation="REQUIRED" />
			<tx:method name="moveProd" propagation="REQUIRED" />
			<tx:method name="removeMember" propagation="REQUIRED" />
			<tx:method name="prePay" propagation="REQUIRED" />
			<tx:method name="finishPay" propagation="REQUIRED" />
			
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="load*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
			<tx:method name="datagrid*" propagation="SUPPORTS" />

			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	
<!-- 	<aop:aspectj-autoproxy proxy-target-class="true"/> -->
	<aop:config>
		<aop:pointcut id="transactionPointcut"
			expression="execution(* com.fion.p2p.service..*.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut"
			advice-ref="transactionAdvice" />
	</aop:config>
	
	<!-- 进行FTP上传下载的工具类 
	<bean id="apacheFtpConnectBaSt" class="cn.eshore.am.common.util.ApacheFtpConnect">
		<property name="server" value="${ftp.servername}" />
		<property name="port" value="${ftp.port}" />
		<property name="username" value="${ftp.username}" />
		<property name="pwd" value="${ftp.pwd}" />
		<property name="path" value="${ftp.path}" />
	</bean>-->

    <!-- 打开[配置druid监控spring jdbc]就要打开[aop:aspectj-autoproxy]不然会报CGLB代理错误 -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true"/> --> 

	<!-- 配置druid监控spring jdbc 通知和切入点的配置，当 切入点被执行就开始通知，切入点用了代理-->
<!-- 	<bean id="druid-stat-interceptor" -->
<!-- 		class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"> -->
<!-- 	</bean> -->
<!-- 	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" -->
<!-- 		scope="prototype"> -->
<!-- 		<property name="patterns"> -->
<!-- 			<list> -->
<!-- 				<value>cn.eshore.am.service.*</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 	</bean> -->
<!-- 	<aop:config> -->
<!-- 		<aop:advisor advice-ref="druid-stat-interceptor" -->
<!-- 			pointcut-ref="druid-stat-pointcut" /> -->
<!-- 	</aop:config> -->


	



<bean id="dataSource" class="com.fion.p2p.common.dynamicdatadsource.DynamicDataSource">
	<property name="targetDataSources">
		<map key-type="java.lang.String">
			<!-- write -->
			<entry key="master" value-ref="masterdataSource" />
			<!-- read -->
			<entry key="slave" value-ref="slavedataSource" />
		</map>

	</property>
	<property name="defaultTargetDataSource" ref="masterdataSource" />
</bean>

<!-- <bean id="transactionManager" -->
<!-- 	class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> -->
<!-- 	<property name="dataSource" ref="dataSource" /> -->
<!-- </bean> -->


<!-- 配置SqlSessionFactoryBean -->
<!-- <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> -->
<!-- 	<property name="dataSource" ref="dataSource" /> -->
<!-- 	<property name="configLocation" value="classpath:mybatis-config.xml" /> -->
<!-- </bean> -->

<!-- 配置数据库注解aop -->
<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
<bean id="manyDataSourceAspect" class="com.fion.p2p.common.dynamicdatadsource.DataSourceAspect" />
<aop:config>
	<aop:aspect id="c" ref="manyDataSourceAspect">
		<aop:pointcut id="tx"
			expression="execution(* com.fion.p2p.dao..*.*(..))" />
		<aop:before pointcut-ref="tx" method="before" />
	</aop:aspect>
</aop:config>
<!-- 配置数据库注解aop -->
</beans>